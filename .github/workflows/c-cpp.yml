name: C/C++ CI

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:
  cmake-build:
      strategy:
        fail-fast: false
        matrix:
          config:
          - {
              name: "Windows - MSVC 2022",
              os: windows-latest,
              build_type: "Debug",
              cc: "cl",
              cxx: "cl",
              generators: "Visual Studio 17 2022",
            }
          - {
              name: "Ubuntu - Clang",
              os: ubuntu-latest,
              build_type: "Debug",
              cc: "clang-15",
              cxx: "clang++-15",
              generators: "Unix Makefiles",
            }
      runs-on: ${{ matrix.config.os }}

      steps:
        - uses: actions/checkout@v3
          with:
            submodules: recursive

        - if: startsWith(matrix.config.os, 'windows')
          run: |
            git config --system core.longpaths true

        - if: startsWith(matrix.config.os, 'ubuntu')
          run: |
            sudo sed -i 's/azure\.//' /etc/apt/sources.list
            sudo apt-get update
            sudo apt-get install -y gcc-12 clang-15 xorg-dev libxinerama-dev libxcursor-dev libgles2-mesa-dev libegl1-mesa-dev libglfw3-dev libglew-dev libstdc++-12-dev extra-cmake-modules libxkbcommon-x11-dev wayland-protocols

        - name: Prepare Vulkan SDK
          uses: humbletim/setup-vulkan-sdk@v1.2.0
          with:
            vulkan-query-version: 1.3.204.0
            vulkan-components: Vulkan-Headers, Vulkan-Loader
            vulkan-use-cache: true

        - name: Get the number of CPU cores
          uses: SimenB/github-actions-cpu-cores@v1

        - name: Run 'deploy_deps.py'
          run: python deploy_deps.py

        - name: Run 'LightweightVK deploy_deps.py'
          run: |
            cd deps/src/lightweightvk
            python deploy_deps.py

        - name: Build
          shell: bash
          env:
            CC:  ${{ matrix.config.cc }}
            CXX: ${{ matrix.config.cxx }}
          run: |
            cmake ${{ env.CMAKE_GENERATOR }} -S "${{ github.workspace }}" -B build ${{ matrix.config.cmake_args }}
            cd build
            cmake --build . --parallel ${{ steps.cpu-cores.outputs.count }}
